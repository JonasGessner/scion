// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AP//YBRnPz4mAAA=",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
