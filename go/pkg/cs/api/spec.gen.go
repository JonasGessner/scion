// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
