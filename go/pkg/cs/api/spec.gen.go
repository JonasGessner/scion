// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
