// Package api provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"/6TR/BP4LgAA",
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
